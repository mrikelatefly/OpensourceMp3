#include"stm32f10x_it.h"
#include"sys.h"
#include"usart.h"
#include "delay.h"
#include "monitor.h"
#include "hc595.h"
#include "eventscan.h"
/*
注意这里的管脚的定义
管脚定义
12				RCK PB15 输出时钟
11				SCK PB14 输入时钟
14				SI  PB13 输入数据线
10				OE PB12

13				SCLR1-SCLR4	PB9-PB6

输入事件的管脚定义

PA0 输入位置判别
PB5 PWM输出
*/
char FindMostNum(char *s);
char num[10];
int main()
{
			//char p=0;
			int i=0,local,len,t,ccr=150,ischange=1;
		
			//u16 mid=16,first;
			//u16 k=6;
			//u16 w=165;
			NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2); //设置NVIC中断分组
			delay_init();
			TIM3_PWM_Init(2200-1,72-1); 
			Hc595_Init();
			Event_Pin_Init();
			//uart_init(115200);
/*
舵机频率为50hz,别改了，，
增大电流可完全消除舵机抖动的问题，电压为5.00左右，电流要在1.2A以上
MIN 55
MIDE 165 注意这又偏差大概差40us
MAX  275
			//TIM3_PWM_Init(2200-1,72-1);  
			//printf("Hello,I am working now\n");
			//初始化识别管脚
			//TIM3_PWM_Init(1439,999);
			//SetCCR2(105);
*/
			while(1)
			{
//				local=Find();
//				
//				if(local)
//				{
//					printf("%d\n",local);
//				}
//	SetCCR2(200);
	    	SetCCR2(165);
				
			}
/*
对舵机的初步控制
				
1 大概的找出位置若出现在边沿则查找准确的位置
	
				u16 mid=16;
				u16 k=6                   //对应的变化角度为3度
				if(local>mid)
				{
				  SetCCR2(165+k)；
				   while(local==16)
				     {
								  SetCCR2(165-k);
			       }
			  }
			
				if(local<mid)
				{
				  SetCCR2(165-k)；
				   while(local==16)
				     {
								  SetCCR2(165+k);
			       }
			  }

 */
			
			
}

/*
void Pin_Init1()
{
		GPIO_InitTypeDef GPIO_InitStructure;
		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
		//这里需要初始化4个使能端，以及三个输控制输出端
		//OE1-OE4	PB6-PB9
		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13; //初始化OE1-4
		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  //推挽输出
		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
		GPIO_Init(GPIOC, &GPIO_InitStructure);//初始化GPIO
		
		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;  //浮空输入
		GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIO
}

SetCCR2(150);
				if(USART_RX_STA&0x8000)
				{					   
					len=USART_RX_STA&0x3fff;
					printf("\nyour input!\n");
					ccr=0;
					ischange=~ischange;
					for(t=0;t<len;t++)
					{
						ccr*=10;
						ccr+=(int)(USART_RX_BUF[t]-'0');
						USART_SendData(USART1, USART_RX_BUF[t]);
						while(USART_GetFlagStatus(USART1,USART_FLAG_TC)!=SET);
					}
					printf("\nccr=%d\n",ccr);//????
					USART_RX_STA=0;
				}
					//local=Find();
					//delay_ms(10);
					//printf("local:%d\n",local);
				if(!ischange)
				{
					SetCCR2(ccr);
					ischange=~ischange;
				}

char FindMostNum(char *s)
{
	char i=0,j=0,*p,r;
	while(*s!='\0')
	{
		p=s;
		p++;
		j=0;
		while(*p!='\0')
		{
			if(*p==*s)
			{
				j++;
			}
			p++;
		}
		if(j>i)
		{
			i=j;
			r=*s;
		}
		s++;
	}
	return r;
}
*/


